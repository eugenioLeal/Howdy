Terminals which are not used

   INT
   FLOAT
   CHAR
   NUTHIN
   STRUCT
   ASSIGNMENT_OPERATOR
   LBRACKET
   RBRACKET


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | HOWDY_PARTNER expression_statement SO_LONG_PARTNER

    3 logical_or_expression: logical_and_expression
    4                      | logical_or_expression OR logical_and_expression

    5 logical_and_expression: equality_expression
    6                       | logical_and_expression AND equality_expression

    7 equality_expression: relational_expression
    8                    | equality_expression EQUALS relational_expression
    9                    | equality_expression NOT_EQUALS relational_expression

   10 relational_expression: additive_expression
   11                      | relational_expression LESS_THAN additive_expression
   12                      | relational_expression GREATER_THAN additive_expression
   13                      | relational_expression LESS_EQUAL additive_expression
   14                      | relational_expression GREATER_EQUAL additive_expression

   15 additive_expression: multiplicative_expression
   16                    | additive_expression ADDITION multiplicative_expression
   17                    | additive_expression SUBTRACTION multiplicative_expression

   18 multiplicative_expression: primary_expression
   19                          | multiplicative_expression MULTIPLICATION primary_expression
   20                          | multiplicative_expression DIVISION primary_expression
   21                          | multiplicative_expression MOD primary_expression

   22 primary_expression: ID
   23                   | LPAREN expression RPAREN
   24                   | NUMBER

   25 expression: logical_or_expression

   26 expression_statement: expression SEMI
   27                     | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
HOWDY_PARTNER (258) 2
SO_LONG_PARTNER (259) 2
SEMI (260) 26
ID (261) 22
INT (262)
FLOAT (263)
CHAR (264)
NUTHIN (265)
STRUCT (266)
ADDITION (267) 16
SUBTRACTION (268) 17
MULTIPLICATION (269) 19
DIVISION (270) 20
MOD (271) 21
LPAREN (272) 23
RPAREN (273) 23
ASSIGNMENT_OPERATOR (274)
LBRACKET (275)
RBRACKET (276)
NUMBER (277) 24
AND (278) 6
OR (279) 4
EQUALS (280) 8
NOT_EQUALS (281) 9
LESS_THAN (282) 11
GREATER_THAN (283) 12
LESS_EQUAL (284) 13
GREATER_EQUAL (285) 14


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1 2, on right: 0
logical_or_expression (33)
    on left: 3 4, on right: 4 25
logical_and_expression (34)
    on left: 5 6, on right: 3 4 6
equality_expression (35)
    on left: 7 8 9, on right: 5 6 8 9
relational_expression (36)
    on left: 10 11 12 13 14, on right: 7 8 9 11 12 13 14
additive_expression (37)
    on left: 15 16 17, on right: 10 11 12 13 14 16 17
multiplicative_expression (38)
    on left: 18 19 20 21, on right: 15 16 17 19 20 21
primary_expression (39)
    on left: 22 23 24, on right: 18 19 20 21
expression (40)
    on left: 25, on right: 23 26
expression_statement (41)
    on left: 26 27, on right: 2


state 0

    0 $accept: . program $end

    HOWDY_PARTNER  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program  go to state 2


state 1

    2 program: HOWDY_PARTNER . expression_statement SO_LONG_PARTNER

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    $default  reduce using rule 27 (expression_statement)

    logical_or_expression      go to state 6
    logical_and_expression     go to state 7
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12
    expression                 go to state 13
    expression_statement       go to state 14


state 2

    0 $accept: program . $end

    $end  shift, and go to state 15


state 3

   22 primary_expression: ID .

    $default  reduce using rule 22 (primary_expression)


state 4

   23 primary_expression: LPAREN . expression RPAREN

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    logical_or_expression      go to state 6
    logical_and_expression     go to state 7
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12
    expression                 go to state 16


state 5

   24 primary_expression: NUMBER .

    $default  reduce using rule 24 (primary_expression)


state 6

    4 logical_or_expression: logical_or_expression . OR logical_and_expression
   25 expression: logical_or_expression .

    OR  shift, and go to state 17

    $default  reduce using rule 25 (expression)


state 7

    3 logical_or_expression: logical_and_expression .
    6 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 18

    $default  reduce using rule 3 (logical_or_expression)


state 8

    5 logical_and_expression: equality_expression .
    8 equality_expression: equality_expression . EQUALS relational_expression
    9                    | equality_expression . NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 19
    NOT_EQUALS  shift, and go to state 20

    $default  reduce using rule 5 (logical_and_expression)


state 9

    7 equality_expression: relational_expression .
   11 relational_expression: relational_expression . LESS_THAN additive_expression
   12                      | relational_expression . GREATER_THAN additive_expression
   13                      | relational_expression . LESS_EQUAL additive_expression
   14                      | relational_expression . GREATER_EQUAL additive_expression

    LESS_THAN      shift, and go to state 21
    GREATER_THAN   shift, and go to state 22
    LESS_EQUAL     shift, and go to state 23
    GREATER_EQUAL  shift, and go to state 24

    $default  reduce using rule 7 (equality_expression)


state 10

   10 relational_expression: additive_expression .
   16 additive_expression: additive_expression . ADDITION multiplicative_expression
   17                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 25
    SUBTRACTION  shift, and go to state 26

    $default  reduce using rule 10 (relational_expression)


state 11

   15 additive_expression: multiplicative_expression .
   19 multiplicative_expression: multiplicative_expression . MULTIPLICATION primary_expression
   20                          | multiplicative_expression . DIVISION primary_expression
   21                          | multiplicative_expression . MOD primary_expression

    MULTIPLICATION  shift, and go to state 27
    DIVISION        shift, and go to state 28
    MOD             shift, and go to state 29

    $default  reduce using rule 15 (additive_expression)


state 12

   18 multiplicative_expression: primary_expression .

    $default  reduce using rule 18 (multiplicative_expression)


state 13

   26 expression_statement: expression . SEMI

    SEMI  shift, and go to state 30


state 14

    2 program: HOWDY_PARTNER expression_statement . SO_LONG_PARTNER

    SO_LONG_PARTNER  shift, and go to state 31


state 15

    0 $accept: program $end .

    $default  accept


state 16

   23 primary_expression: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 32


state 17

    4 logical_or_expression: logical_or_expression OR . logical_and_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    logical_and_expression     go to state 33
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 18

    6 logical_and_expression: logical_and_expression AND . equality_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    equality_expression        go to state 34
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 19

    8 equality_expression: equality_expression EQUALS . relational_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    relational_expression      go to state 35
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 20

    9 equality_expression: equality_expression NOT_EQUALS . relational_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    relational_expression      go to state 36
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 21

   11 relational_expression: relational_expression LESS_THAN . additive_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    additive_expression        go to state 37
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 22

   12 relational_expression: relational_expression GREATER_THAN . additive_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    additive_expression        go to state 38
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 23

   13 relational_expression: relational_expression LESS_EQUAL . additive_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    additive_expression        go to state 39
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 24

   14 relational_expression: relational_expression GREATER_EQUAL . additive_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    additive_expression        go to state 40
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 25

   16 additive_expression: additive_expression ADDITION . multiplicative_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    multiplicative_expression  go to state 41
    primary_expression         go to state 12


state 26

   17 additive_expression: additive_expression SUBTRACTION . multiplicative_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    multiplicative_expression  go to state 42
    primary_expression         go to state 12


state 27

   19 multiplicative_expression: multiplicative_expression MULTIPLICATION . primary_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    primary_expression  go to state 43


state 28

   20 multiplicative_expression: multiplicative_expression DIVISION . primary_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    primary_expression  go to state 44


state 29

   21 multiplicative_expression: multiplicative_expression MOD . primary_expression

    ID      shift, and go to state 3
    LPAREN  shift, and go to state 4
    NUMBER  shift, and go to state 5

    primary_expression  go to state 45


state 30

   26 expression_statement: expression SEMI .

    $default  reduce using rule 26 (expression_statement)


state 31

    2 program: HOWDY_PARTNER expression_statement SO_LONG_PARTNER .

    $default  reduce using rule 2 (program)


state 32

   23 primary_expression: LPAREN expression RPAREN .

    $default  reduce using rule 23 (primary_expression)


state 33

    4 logical_or_expression: logical_or_expression OR logical_and_expression .
    6 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 18

    $default  reduce using rule 4 (logical_or_expression)


state 34

    6 logical_and_expression: logical_and_expression AND equality_expression .
    8 equality_expression: equality_expression . EQUALS relational_expression
    9                    | equality_expression . NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 19
    NOT_EQUALS  shift, and go to state 20

    $default  reduce using rule 6 (logical_and_expression)


state 35

    8 equality_expression: equality_expression EQUALS relational_expression .
   11 relational_expression: relational_expression . LESS_THAN additive_expression
   12                      | relational_expression . GREATER_THAN additive_expression
   13                      | relational_expression . LESS_EQUAL additive_expression
   14                      | relational_expression . GREATER_EQUAL additive_expression

    LESS_THAN      shift, and go to state 21
    GREATER_THAN   shift, and go to state 22
    LESS_EQUAL     shift, and go to state 23
    GREATER_EQUAL  shift, and go to state 24

    $default  reduce using rule 8 (equality_expression)


state 36

    9 equality_expression: equality_expression NOT_EQUALS relational_expression .
   11 relational_expression: relational_expression . LESS_THAN additive_expression
   12                      | relational_expression . GREATER_THAN additive_expression
   13                      | relational_expression . LESS_EQUAL additive_expression
   14                      | relational_expression . GREATER_EQUAL additive_expression

    LESS_THAN      shift, and go to state 21
    GREATER_THAN   shift, and go to state 22
    LESS_EQUAL     shift, and go to state 23
    GREATER_EQUAL  shift, and go to state 24

    $default  reduce using rule 9 (equality_expression)


state 37

   11 relational_expression: relational_expression LESS_THAN additive_expression .
   16 additive_expression: additive_expression . ADDITION multiplicative_expression
   17                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 25
    SUBTRACTION  shift, and go to state 26

    $default  reduce using rule 11 (relational_expression)


state 38

   12 relational_expression: relational_expression GREATER_THAN additive_expression .
   16 additive_expression: additive_expression . ADDITION multiplicative_expression
   17                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 25
    SUBTRACTION  shift, and go to state 26

    $default  reduce using rule 12 (relational_expression)


state 39

   13 relational_expression: relational_expression LESS_EQUAL additive_expression .
   16 additive_expression: additive_expression . ADDITION multiplicative_expression
   17                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 25
    SUBTRACTION  shift, and go to state 26

    $default  reduce using rule 13 (relational_expression)


state 40

   14 relational_expression: relational_expression GREATER_EQUAL additive_expression .
   16 additive_expression: additive_expression . ADDITION multiplicative_expression
   17                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 25
    SUBTRACTION  shift, and go to state 26

    $default  reduce using rule 14 (relational_expression)


state 41

   16 additive_expression: additive_expression ADDITION multiplicative_expression .
   19 multiplicative_expression: multiplicative_expression . MULTIPLICATION primary_expression
   20                          | multiplicative_expression . DIVISION primary_expression
   21                          | multiplicative_expression . MOD primary_expression

    MULTIPLICATION  shift, and go to state 27
    DIVISION        shift, and go to state 28
    MOD             shift, and go to state 29

    $default  reduce using rule 16 (additive_expression)


state 42

   17 additive_expression: additive_expression SUBTRACTION multiplicative_expression .
   19 multiplicative_expression: multiplicative_expression . MULTIPLICATION primary_expression
   20                          | multiplicative_expression . DIVISION primary_expression
   21                          | multiplicative_expression . MOD primary_expression

    MULTIPLICATION  shift, and go to state 27
    DIVISION        shift, and go to state 28
    MOD             shift, and go to state 29

    $default  reduce using rule 17 (additive_expression)


state 43

   19 multiplicative_expression: multiplicative_expression MULTIPLICATION primary_expression .

    $default  reduce using rule 19 (multiplicative_expression)


state 44

   20 multiplicative_expression: multiplicative_expression DIVISION primary_expression .

    $default  reduce using rule 20 (multiplicative_expression)


state 45

   21 multiplicative_expression: multiplicative_expression MOD primary_expression .

    $default  reduce using rule 21 (multiplicative_expression)
