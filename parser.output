Terminals which are not used

   INT
   FLOAT
   CHAR
   NUTHIN
   STRUCT
   ASSIGNMENT_OPERATOR
   LBRACKET
   RBRACKET


State 0 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: HOWDY_PARTNER expression_statement SO_LONG_PARTNER
    2        | /* empty */
    3        | HOWDY_PARTNER expression_statement
    4        | expression_statement SO_LONG_PARTNER
    5        | expression_statement

    6 logical_or_expression: logical_and_expression
    7                      | logical_or_expression OR logical_and_expression

    8 logical_and_expression: equality_expression
    9                       | logical_and_expression AND equality_expression

   10 equality_expression: relational_expression
   11                    | equality_expression EQUALS relational_expression
   12                    | equality_expression NOT_EQUALS relational_expression

   13 relational_expression: additive_expression
   14                      | relational_expression LESS_THAN additive_expression
   15                      | relational_expression GREATER_THAN additive_expression
   16                      | relational_expression LESS_EQUAL additive_expression
   17                      | relational_expression GREATER_EQUAL additive_expression

   18 additive_expression: multiplicative_expression
   19                    | additive_expression ADDITION multiplicative_expression
   20                    | additive_expression SUBTRACTION multiplicative_expression

   21 multiplicative_expression: primary_expression
   22                          | multiplicative_expression MULTIPLICATION primary_expression
   23                          | multiplicative_expression DIVISION primary_expression
   24                          | multiplicative_expression MOD primary_expression

   25 primary_expression: ID
   26                   | LPAREN expression RPAREN
   27                   | NUMBER

   28 expression: logical_or_expression

   29 expression_statement: expression SEMI
   30                     | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
HOWDY_PARTNER (258) 1 3
SO_LONG_PARTNER (259) 1 4
SEMI (260) 29
ID (261) 25
INT (262)
FLOAT (263)
CHAR (264)
NUTHIN (265)
STRUCT (266)
ADDITION (267) 19
SUBTRACTION (268) 20
MULTIPLICATION (269) 22
DIVISION (270) 23
MOD (271) 24
LPAREN (272) 26
RPAREN (273) 26
ASSIGNMENT_OPERATOR (274)
LBRACKET (275)
RBRACKET (276)
NUMBER (277) 27
AND (278) 9
OR (279) 7
EQUALS (280) 11
NOT_EQUALS (281) 12
LESS_THAN (282) 14
GREATER_THAN (283) 15
LESS_EQUAL (284) 16
GREATER_EQUAL (285) 17


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1 2 3 4 5, on right: 0
logical_or_expression (33)
    on left: 6 7, on right: 7 28
logical_and_expression (34)
    on left: 8 9, on right: 6 7 9
equality_expression (35)
    on left: 10 11 12, on right: 8 9 11 12
relational_expression (36)
    on left: 13 14 15 16 17, on right: 10 11 12 14 15 16 17
additive_expression (37)
    on left: 18 19 20, on right: 13 14 15 16 17 19 20
multiplicative_expression (38)
    on left: 21 22 23 24, on right: 18 19 20 22 23 24
primary_expression (39)
    on left: 25 26 27, on right: 21 22 23 24
expression (40)
    on left: 28, on right: 26 29
expression_statement (41)
    on left: 29 30, on right: 1 3 4 5


state 0

    0 $accept: . program $end

    HOWDY_PARTNER  shift, and go to state 1
    ID             shift, and go to state 2
    LPAREN         shift, and go to state 3
    NUMBER         shift, and go to state 4

    $end             reduce using rule 2 (program)
    $end             [reduce using rule 30 (expression_statement)]
    SO_LONG_PARTNER  reduce using rule 30 (expression_statement)
    $default         reduce using rule 2 (program)

    program                    go to state 5
    logical_or_expression      go to state 6
    logical_and_expression     go to state 7
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12
    expression                 go to state 13
    expression_statement       go to state 14


state 1

    1 program: HOWDY_PARTNER . expression_statement SO_LONG_PARTNER
    3        | HOWDY_PARTNER . expression_statement

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    $default  reduce using rule 30 (expression_statement)

    logical_or_expression      go to state 6
    logical_and_expression     go to state 7
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12
    expression                 go to state 13
    expression_statement       go to state 15


state 2

   25 primary_expression: ID .

    $default  reduce using rule 25 (primary_expression)


state 3

   26 primary_expression: LPAREN . expression RPAREN

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    logical_or_expression      go to state 6
    logical_and_expression     go to state 7
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12
    expression                 go to state 16


state 4

   27 primary_expression: NUMBER .

    $default  reduce using rule 27 (primary_expression)


state 5

    0 $accept: program . $end

    $end  shift, and go to state 17


state 6

    7 logical_or_expression: logical_or_expression . OR logical_and_expression
   28 expression: logical_or_expression .

    OR  shift, and go to state 18

    $default  reduce using rule 28 (expression)


state 7

    6 logical_or_expression: logical_and_expression .
    9 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 19

    $default  reduce using rule 6 (logical_or_expression)


state 8

    8 logical_and_expression: equality_expression .
   11 equality_expression: equality_expression . EQUALS relational_expression
   12                    | equality_expression . NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 20
    NOT_EQUALS  shift, and go to state 21

    $default  reduce using rule 8 (logical_and_expression)


state 9

   10 equality_expression: relational_expression .
   14 relational_expression: relational_expression . LESS_THAN additive_expression
   15                      | relational_expression . GREATER_THAN additive_expression
   16                      | relational_expression . LESS_EQUAL additive_expression
   17                      | relational_expression . GREATER_EQUAL additive_expression

    LESS_THAN      shift, and go to state 22
    GREATER_THAN   shift, and go to state 23
    LESS_EQUAL     shift, and go to state 24
    GREATER_EQUAL  shift, and go to state 25

    $default  reduce using rule 10 (equality_expression)


state 10

   13 relational_expression: additive_expression .
   19 additive_expression: additive_expression . ADDITION multiplicative_expression
   20                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 26
    SUBTRACTION  shift, and go to state 27

    $default  reduce using rule 13 (relational_expression)


state 11

   18 additive_expression: multiplicative_expression .
   22 multiplicative_expression: multiplicative_expression . MULTIPLICATION primary_expression
   23                          | multiplicative_expression . DIVISION primary_expression
   24                          | multiplicative_expression . MOD primary_expression

    MULTIPLICATION  shift, and go to state 28
    DIVISION        shift, and go to state 29
    MOD             shift, and go to state 30

    $default  reduce using rule 18 (additive_expression)


state 12

   21 multiplicative_expression: primary_expression .

    $default  reduce using rule 21 (multiplicative_expression)


state 13

   29 expression_statement: expression . SEMI

    SEMI  shift, and go to state 31


state 14

    4 program: expression_statement . SO_LONG_PARTNER
    5        | expression_statement .

    SO_LONG_PARTNER  shift, and go to state 32

    $default  reduce using rule 5 (program)


state 15

    1 program: HOWDY_PARTNER expression_statement . SO_LONG_PARTNER
    3        | HOWDY_PARTNER expression_statement .

    SO_LONG_PARTNER  shift, and go to state 33

    $default  reduce using rule 3 (program)


state 16

   26 primary_expression: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 34


state 17

    0 $accept: program $end .

    $default  accept


state 18

    7 logical_or_expression: logical_or_expression OR . logical_and_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    logical_and_expression     go to state 35
    equality_expression        go to state 8
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 19

    9 logical_and_expression: logical_and_expression AND . equality_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    equality_expression        go to state 36
    relational_expression      go to state 9
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 20

   11 equality_expression: equality_expression EQUALS . relational_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    relational_expression      go to state 37
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 21

   12 equality_expression: equality_expression NOT_EQUALS . relational_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    relational_expression      go to state 38
    additive_expression        go to state 10
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 22

   14 relational_expression: relational_expression LESS_THAN . additive_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    additive_expression        go to state 39
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 23

   15 relational_expression: relational_expression GREATER_THAN . additive_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    additive_expression        go to state 40
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 24

   16 relational_expression: relational_expression LESS_EQUAL . additive_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    additive_expression        go to state 41
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 25

   17 relational_expression: relational_expression GREATER_EQUAL . additive_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    additive_expression        go to state 42
    multiplicative_expression  go to state 11
    primary_expression         go to state 12


state 26

   19 additive_expression: additive_expression ADDITION . multiplicative_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    multiplicative_expression  go to state 43
    primary_expression         go to state 12


state 27

   20 additive_expression: additive_expression SUBTRACTION . multiplicative_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    multiplicative_expression  go to state 44
    primary_expression         go to state 12


state 28

   22 multiplicative_expression: multiplicative_expression MULTIPLICATION . primary_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    primary_expression  go to state 45


state 29

   23 multiplicative_expression: multiplicative_expression DIVISION . primary_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    primary_expression  go to state 46


state 30

   24 multiplicative_expression: multiplicative_expression MOD . primary_expression

    ID      shift, and go to state 2
    LPAREN  shift, and go to state 3
    NUMBER  shift, and go to state 4

    primary_expression  go to state 47


state 31

   29 expression_statement: expression SEMI .

    $default  reduce using rule 29 (expression_statement)


state 32

    4 program: expression_statement SO_LONG_PARTNER .

    $default  reduce using rule 4 (program)


state 33

    1 program: HOWDY_PARTNER expression_statement SO_LONG_PARTNER .

    $default  reduce using rule 1 (program)


state 34

   26 primary_expression: LPAREN expression RPAREN .

    $default  reduce using rule 26 (primary_expression)


state 35

    7 logical_or_expression: logical_or_expression OR logical_and_expression .
    9 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 19

    $default  reduce using rule 7 (logical_or_expression)


state 36

    9 logical_and_expression: logical_and_expression AND equality_expression .
   11 equality_expression: equality_expression . EQUALS relational_expression
   12                    | equality_expression . NOT_EQUALS relational_expression

    EQUALS      shift, and go to state 20
    NOT_EQUALS  shift, and go to state 21

    $default  reduce using rule 9 (logical_and_expression)


state 37

   11 equality_expression: equality_expression EQUALS relational_expression .
   14 relational_expression: relational_expression . LESS_THAN additive_expression
   15                      | relational_expression . GREATER_THAN additive_expression
   16                      | relational_expression . LESS_EQUAL additive_expression
   17                      | relational_expression . GREATER_EQUAL additive_expression

    LESS_THAN      shift, and go to state 22
    GREATER_THAN   shift, and go to state 23
    LESS_EQUAL     shift, and go to state 24
    GREATER_EQUAL  shift, and go to state 25

    $default  reduce using rule 11 (equality_expression)


state 38

   12 equality_expression: equality_expression NOT_EQUALS relational_expression .
   14 relational_expression: relational_expression . LESS_THAN additive_expression
   15                      | relational_expression . GREATER_THAN additive_expression
   16                      | relational_expression . LESS_EQUAL additive_expression
   17                      | relational_expression . GREATER_EQUAL additive_expression

    LESS_THAN      shift, and go to state 22
    GREATER_THAN   shift, and go to state 23
    LESS_EQUAL     shift, and go to state 24
    GREATER_EQUAL  shift, and go to state 25

    $default  reduce using rule 12 (equality_expression)


state 39

   14 relational_expression: relational_expression LESS_THAN additive_expression .
   19 additive_expression: additive_expression . ADDITION multiplicative_expression
   20                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 26
    SUBTRACTION  shift, and go to state 27

    $default  reduce using rule 14 (relational_expression)


state 40

   15 relational_expression: relational_expression GREATER_THAN additive_expression .
   19 additive_expression: additive_expression . ADDITION multiplicative_expression
   20                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 26
    SUBTRACTION  shift, and go to state 27

    $default  reduce using rule 15 (relational_expression)


state 41

   16 relational_expression: relational_expression LESS_EQUAL additive_expression .
   19 additive_expression: additive_expression . ADDITION multiplicative_expression
   20                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 26
    SUBTRACTION  shift, and go to state 27

    $default  reduce using rule 16 (relational_expression)


state 42

   17 relational_expression: relational_expression GREATER_EQUAL additive_expression .
   19 additive_expression: additive_expression . ADDITION multiplicative_expression
   20                    | additive_expression . SUBTRACTION multiplicative_expression

    ADDITION     shift, and go to state 26
    SUBTRACTION  shift, and go to state 27

    $default  reduce using rule 17 (relational_expression)


state 43

   19 additive_expression: additive_expression ADDITION multiplicative_expression .
   22 multiplicative_expression: multiplicative_expression . MULTIPLICATION primary_expression
   23                          | multiplicative_expression . DIVISION primary_expression
   24                          | multiplicative_expression . MOD primary_expression

    MULTIPLICATION  shift, and go to state 28
    DIVISION        shift, and go to state 29
    MOD             shift, and go to state 30

    $default  reduce using rule 19 (additive_expression)


state 44

   20 additive_expression: additive_expression SUBTRACTION multiplicative_expression .
   22 multiplicative_expression: multiplicative_expression . MULTIPLICATION primary_expression
   23                          | multiplicative_expression . DIVISION primary_expression
   24                          | multiplicative_expression . MOD primary_expression

    MULTIPLICATION  shift, and go to state 28
    DIVISION        shift, and go to state 29
    MOD             shift, and go to state 30

    $default  reduce using rule 20 (additive_expression)


state 45

   22 multiplicative_expression: multiplicative_expression MULTIPLICATION primary_expression .

    $default  reduce using rule 22 (multiplicative_expression)


state 46

   23 multiplicative_expression: multiplicative_expression DIVISION primary_expression .

    $default  reduce using rule 23 (multiplicative_expression)


state 47

   24 multiplicative_expression: multiplicative_expression MOD primary_expression .

    $default  reduce using rule 24 (multiplicative_expression)
