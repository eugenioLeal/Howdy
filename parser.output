Terminals which are not used

   NUTHIN
   STRUCT
   ADDITION
   SUBTRACTION
   MULTIPLICATION
   DIVISION
   MOD
   LPAREN
   RPAREN
   ASSIGNMENT_OPERATOR
   LBRACKET
   RBRACKET
   NUMBER
   AND
   OR
   EQUALS
   NOT_EQUALS
   LESS_THAN
   GREATER_THAN
   LESS_EQUAL
   GREATER_EQUAL


Grammar

    0 $accept: program $end

    1 program: HOWDY_PARTNER declaration_list SO_LONG_PARTNER

    2 declaration: type_specifier ID
    3            | type_specifier ID SEMI

    4 declaration_list: declaration
    5                 | declaration_list declaration

    6 type_specifier: INT
    7               | FLOAT
    8               | CHAR
    9               | BOOL


Terminals, with rules where they appear

$end (0) 0
error (256)
HOWDY_PARTNER (258) 1
SO_LONG_PARTNER (259) 1
SEMI (260) 3
ID (261) 2 3
INT (262) 6
FLOAT (263) 7
CHAR (264) 8
BOOL (265) 9
NUTHIN (266)
STRUCT (267)
ADDITION (268)
SUBTRACTION (269)
MULTIPLICATION (270)
DIVISION (271)
MOD (272)
LPAREN (273)
RPAREN (274)
ASSIGNMENT_OPERATOR (275)
LBRACKET (276)
RBRACKET (277)
NUMBER (278)
AND (279)
OR (280)
EQUALS (281)
NOT_EQUALS (282)
LESS_THAN (283)
GREATER_THAN (284)
LESS_EQUAL (285)
GREATER_EQUAL (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
declaration (34)
    on left: 2 3, on right: 4 5
declaration_list (35)
    on left: 4 5, on right: 1 5
type_specifier (36)
    on left: 6 7 8 9, on right: 2 3


state 0

    0 $accept: . program $end

    HOWDY_PARTNER  shift, and go to state 1

    program  go to state 2


state 1

    1 program: HOWDY_PARTNER . declaration_list SO_LONG_PARTNER

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4
    CHAR   shift, and go to state 5
    BOOL   shift, and go to state 6

    declaration       go to state 7
    declaration_list  go to state 8
    type_specifier    go to state 9


state 2

    0 $accept: program . $end

    $end  shift, and go to state 10


state 3

    6 type_specifier: INT .

    $default  reduce using rule 6 (type_specifier)


state 4

    7 type_specifier: FLOAT .

    $default  reduce using rule 7 (type_specifier)


state 5

    8 type_specifier: CHAR .

    $default  reduce using rule 8 (type_specifier)


state 6

    9 type_specifier: BOOL .

    $default  reduce using rule 9 (type_specifier)


state 7

    4 declaration_list: declaration .

    $default  reduce using rule 4 (declaration_list)


state 8

    1 program: HOWDY_PARTNER declaration_list . SO_LONG_PARTNER
    5 declaration_list: declaration_list . declaration

    SO_LONG_PARTNER  shift, and go to state 11
    INT              shift, and go to state 3
    FLOAT            shift, and go to state 4
    CHAR             shift, and go to state 5
    BOOL             shift, and go to state 6

    declaration     go to state 12
    type_specifier  go to state 9


state 9

    2 declaration: type_specifier . ID
    3            | type_specifier . ID SEMI

    ID  shift, and go to state 13


state 10

    0 $accept: program $end .

    $default  accept


state 11

    1 program: HOWDY_PARTNER declaration_list SO_LONG_PARTNER .

    $default  reduce using rule 1 (program)


state 12

    5 declaration_list: declaration_list declaration .

    $default  reduce using rule 5 (declaration_list)


state 13

    2 declaration: type_specifier ID .
    3            | type_specifier ID . SEMI

    SEMI  shift, and go to state 14

    $default  reduce using rule 2 (declaration)


state 14

    3 declaration: type_specifier ID SEMI .

    $default  reduce using rule 3 (declaration)
